<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.keduit.mapper.TodoMapper">
	<!-- TodoMapper 인터페이스의 public List<TodoVO> getList();에 해당하는 쿼리문 -->
	<select id="getList" resultType="com.keduit.domain.TodoVO">
		select * from t_todo order by tno desc
	</select>
	
	<!-- TodoMapper 인터페이스의 public void insert(TodoVO todo);에 해당하는 쿼리문 -->
	<insert id="insert">
		insert into t_todo(tno, title, dueDate, writer, finished) 
		values(seq_todo.nextval, #{title}, #{dueDate}, #{writer}, #{finished})
	</insert>
	
	<!-- TodoMapper 인터페이스의 public void insertSelectKey(TodoVO todo);에 해당하는 쿼리문 -->
	<insert id="insertSelectKey">
		<!-- keyProperty : 생성된 키(여기서는 tno)를 저장할 매개변수의 이름을 지정 -->
		<!-- BEFORE : 언제 selectKey 쿼리가 실행되는지를 지정 -> BEFORE이므로 삽입 쿼리 실행 전에 selectKey 쿼리가 실행 -->
		<selectKey keyProperty="tno" order="BEFORE" resultType="long">
			<!-- resultType : selectKey 쿼리의 결과 타입을 지정 -->
			select seq_todo.nextval from dual
			<!-- dual : 가상의 테이블로서, 단일 행을 포함하고 있는 특별한 테이블.
				실제 데이터를 저장하지 않으며, 주로 함수나 테스트용 쿼리 등에서 사용 -->
		</selectKey>

		insert into t_todo(tno, title, writer, dueDate, finished) 
		values(#{tno}, #{title}, #{writer}, #{dueDate}, #{finished})
	</insert>
	
	<!-- tno에 해당하는 할 일(Todo) 정보를 가져오는 역할 -->
	<select id="read" resultType="com.keduit.domain.TodoVO">
		select * from t_todo where tno = #{tno}
	</select>
	
	<!-- tno에 해당하는 할 일 정보를 삭제하는 역할 -->
	<delete id="delete">
		delete from t_todo where tno = #{tno}
	</delete>
	
	<!-- 일반적으로 작성자는 수정이 가능하지 않도록 하는게 맞지만, 특별한 상황(관리자나 특정 권한을 가진 사용자)에
		수정해야 하는 경우가 생길 수 있기 때문에, 예외적인 상황을 고려하여 작성 -->
	<update id="update">
		update t_todo set title=#{title}, writer=#{writer}, dueDate=#{dueDate}, finished=#{finished}
		where tno=#{tno}
	</update>
</mapper>